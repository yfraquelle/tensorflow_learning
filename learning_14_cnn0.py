# 卷积神经网络CNN在语言和图片的识别中有广泛的应用
# AlphaGO也应用了CNN
# 卷积神经网络的运作：
## 神经网络由一连串的神经层组成，每一层神经层里存在着很多的神经元用于识别
## 每一种神经网络都有它的输入值和输出值，当输入值很多比如图片（很多像素）使用卷积神经网络
## 卷积：对图片上一小块像素区域进行处理，加强了连续性，使得神经网络能看到一个图形而不是一个点，加强了神经网络对图片的理解
## 卷积神经网络有一个批量过滤器，持续不断地在图片上滚动，收集一块像素区域的信息
## 然后整理信息使得有一些实际的呈现比如能看到一些边缘的信息
## 然后神经网络总结出一些更高层的信息结构如眼睛、鼻子
## 再经过一次过滤，将眼睛、鼻子这些信息套入普通的全连接网络进行分类
# 图片如何被卷积
## 一开始图片的高度为通道数
## 卷积后图片变的长宽更小，高度更高，获得边缘信息，再进行多次卷积，压缩长宽、增加高度，获得更深的理解
## 将这样的图片嵌入普通的分类神经层中，就能对图片进行分类
## 在每次卷积中，图片可能会无意丢失一些信息，池化pooling可以解决这个问题
## pooling:每次卷积不压缩长宽，保留更多信息，压缩的工作交给池化，可以提高准确性
# 常见的结构：输入image->卷积层convolution->max pooling->convolution->max pooling->全链接神经层fully connected->fully connected->classifier

# cnn就是使用kernel遍历图片对每个kernel大小的像素图形处理压缩长宽、增加高度，从而将整个将图片变成厚度很大的分类器
# stride为跨度，遍历时每次跳过的像素点，stride越大，压缩后的高度越高，patch即为kernel，有自己的长和宽
# 抽离padding时valid padding图片长宽会压缩，same padding图片长宽不变
# 跨度过长会丢失图片信息，使用跨度更小的same padding，再pooling
# pooling：max pooling&average pooling

# 可以先使用一般的神经网络去训练，如果效果不好可以再使用卷积神经网络